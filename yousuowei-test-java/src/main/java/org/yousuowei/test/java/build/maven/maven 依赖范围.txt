compile（编译范围）

compile是默认的范围；如果没有提供一个范围，那该依赖的范围就是编译范

围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。

 

provided（已提供范围）

provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。例如，如果

你开发了一个web应用，你可能在编译classpath中需要可用的Servlet API来编

译一个servlet，但是你不会想要在打包好的WAR中包含这个Servlet API；这个

Servlet API JAR由你的应用服务器或者servlet容器提供。已提供范围的依赖在

编译classpath（不是运行时）可用。它们不是传递性的，也不会被打包。

 

runtime（运行时范围）

runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你

可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实

现。

 

test（测试范围）

test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运

行阶段可用。

 

system（系统范围）

system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中

JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库

的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。。如

果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注

意该范围是不推荐使用的（你应该一直尽量去从公共或定制的Maven仓库中引用

依赖）。